{"version":3,"file":"static/js/627.805f3318.chunk.js","mappings":"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","sources":["webpack://anime/./src/componets/common/error/Error.module.css?2e01","componets/common/error/Error.tsx","helpers/normalizeDate.ts","webpack://anime/./src/componets/overviewContent/details/Details.module.css?0e70","componets/overviewContent/details/Details.tsx","webpack://anime/./src/componets/overviewContent/decription/Description.module.css?e594","componets/overviewContent/decription/Description.tsx","webpack://anime/./src/componets/overviewContent/OverviewContent.module.css?bb92","componets/overviewContent/OverviewContent.tsx","pages/OverviewPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__jtDW4\"};","import { FC } from 'react';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <h4 className={styles.error}>An error occurred while fetching data</h4>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","export const normalizeDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Details_title__cYtcr\",\"list\":\"Details_list__iTZXu\",\"item\":\"Details_item__7ypxy\",\"item_title\":\"Details_item_title__sKMZG\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime';\r\n\r\nimport { normalizeDate } from 'helpers/normalizeDate';\r\n\r\nimport styles from './Details.module.css';\r\n\r\ninterface DetailsProps {\r\n    anime: IAnime;\r\n}\r\n\r\nconst Details: FC<DetailsProps> = ({ anime }) => {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>Details</h2>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Japanese Title</span>\r\n                    <span>{anime.title_japanese}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Type</span>\r\n                    <span>{anime.type}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Episodes</span>\r\n                    <span>{anime.episodes}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Genres</span>\r\n                    <div>\r\n                        {anime.genres\r\n                            ? anime.genres.map((genre, index) => (\r\n                                  <span key={index}>{genre.name} </span>\r\n                              ))\r\n                            : ''}\r\n                    </div>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Aired</span>\r\n                    <span>\r\n                        {anime.aired ? normalizeDate(anime.aired.from) : ''} -\r\n                        {anime.aired ? normalizeDate(anime.aired?.to) : ''}\r\n                    </span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Status</span>\r\n                    <span>{anime.status}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Season</span>\r\n                    <span>\r\n                        {anime.season} {anime.year}\r\n                    </span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Studios</span>\r\n                    <div>\r\n                        {anime.studios\r\n                            ? anime.studios.map((studio, index) => (\r\n                                  <span key={index}>{studio.name} </span>\r\n                              ))\r\n                            : ''}\r\n                    </div>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Source</span>\r\n                    <span>{anime.source}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Rating</span>\r\n                    <span>{anime.rating}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.item_title}>Duration</span>\r\n                    <span>{anime.duration}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Details;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Description_title__mv3uk\",\"synopsis\":\"Description_synopsis__AcXVi\",\"paragraph\":\"Description_paragraph__092s+\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime';\r\n\r\nimport styles from './Description.module.css';\r\n\r\ninterface DescriptionProps {\r\n    synopsis: IAnime['synopsis'];\r\n}\r\n\r\nconst Description: FC<DescriptionProps> = ({ synopsis }) => {\r\n    const paragraphs = synopsis\r\n        ? synopsis.split('\\n').map((paragraph, index) => (\r\n              <p key={index} className={styles.paragraph}>\r\n                  {paragraph}\r\n              </p>\r\n          ))\r\n        : '';\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>Description</h2>\r\n            <div className={styles.synopsis}>{paragraphs}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Description;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overview\":\"OverviewContent_overview__5-4TN\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime';\r\n\r\nimport Details from './details/Details';\r\nimport Description from './decription/Description';\r\n\r\nimport styles from './OverviewContent.module.css';\r\n\r\ninterface OverviewContentProps {\r\n    anime: IAnime;\r\n}\r\n\r\nconst OverviewContent: FC<OverviewContentProps> = ({ anime }) => {\r\n    return (\r\n        <div className={styles.overview}>\r\n            <Details anime={anime} />\r\n            <Description synopsis={anime.synopsis} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OverviewContent;\r\n","import { FC } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport OverviewContent from 'componets/overviewContent/OverviewContent';\r\nimport Loading from 'componets/common/loading/Loading';\r\nimport Error from 'componets/common/error/Error';\r\n\r\nimport { useGetAnimeByIdQuery } from 'services/AnimeService';\r\n\r\nconst OverviewPage: FC = () => {\r\n    const { animeId } = useParams();\r\n\r\n    const { data, isError, isLoading } = useGetAnimeByIdQuery(animeId!);\r\n\r\n    const hasDataAndNoError = data && !isError;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : hasDataAndNoError ? (\r\n                <OverviewContent anime={data.data} />\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OverviewPage;\r\n"],"names":["Error","_jsx","className","styles","children","normalizeDate","dateString","Date","toLocaleDateString","year","month","day","_ref","_anime$aired","anime","_jsxs","title_japanese","type","episodes","genres","map","genre","index","name","aired","from","to","status","season","studios","studio","source","rating","duration","synopsis","paragraphs","split","paragraph","Details","Description","OverviewPage","animeId","useParams","data","isError","isLoading","useGetAnimeByIdQuery","hasDataAndNoError","Loading","OverviewContent"],"sourceRoot":""}