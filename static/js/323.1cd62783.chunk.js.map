{"version":3,"file":"static/js/323.1cd62783.chunk.js","mappings":"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","sources":["webpack://anime/./src/componets/common/error/Error.module.css?2e01","componets/common/error/Error.tsx","webpack://anime/./src/componets/animeInfo/AnimeInfo.module.css?d107","componets/animeInfo/AnimeInfo.tsx","webpack://anime/./src/componets/animeInfo/animeInfoNav/AnimeInfoNav.module.css?284e","componets/animeInfo/animeInfoNav/AnimeInfoNav.tsx","hooks/useFirebaseAnimeList.ts","pages/AnimeInfoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__jtDW4\"};","import { FC } from 'react';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <h4 className={styles.error}>An error occurred while fetching data</h4>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"AnimeInfo_info__FAYcO\",\"title\":\"AnimeInfo_title__fLhYj\",\"score\":\"AnimeInfo_score__2TMUW\",\"img\":\"AnimeInfo_img__NI85b\",\"buttons\":\"AnimeInfo_buttons__eXI9m\",\"icon_btn\":\"AnimeInfo_icon_btn__ciO6o\",\"info_wrap\":\"AnimeInfo_info_wrap__SCUG1\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime/anime';\r\n\r\nimport styles from './AnimeInfo.module.css';\r\n\r\ninterface AnimeInfoProps {\r\n    anime: IAnime;\r\n    handleWatched: () => void;\r\n    handleWatching: () => void;\r\n    handleToWatch: () => void;\r\n}\r\n\r\nconst AnimeInfo: FC<AnimeInfoProps> = ({\r\n    anime,\r\n    handleWatching,\r\n    handleToWatch,\r\n    handleWatched,\r\n}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={styles.info}>\r\n                <img\r\n                    className={styles.img}\r\n                    src={anime.images.jpg.image_url}\r\n                    alt={anime.title}\r\n                />\r\n                <div className={styles.info_wrap}>\r\n                    <h2 className={styles.title}>{anime.title}</h2>\r\n                    {anime.score && (\r\n                        <p className={styles.score}>{anime.score}</p>\r\n                    )}\r\n                    <div className={styles.buttons}>\r\n                        <button\r\n                            className={styles.icon_btn}\r\n                            onClick={handleWatching}\r\n                        >\r\n                            Watching\r\n                        </button>\r\n                        <button\r\n                            className={styles.icon_btn}\r\n                            onClick={handleWatched}\r\n                        >\r\n                            Watched\r\n                        </button>\r\n                        <button\r\n                            className={styles.icon_btn}\r\n                            onClick={handleToWatch}\r\n                        >\r\n                            To Watch\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"AnimeInfoNav_nav__zY9An\",\"navlist\":\"AnimeInfoNav_navlist__3BVzv\",\"item_link\":\"AnimeInfoNav_item_link__2uJFC\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './AnimeInfoNav.module.css';\r\n\r\nconst AnimeInfoNav: FC = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <nav className={styles.nav}>\r\n                <ul className={styles.navlist}>\r\n                    <li className={styles.item_link}>\r\n                        <Link to={''}>Overview</Link>\r\n                    </li>\r\n                    <li className={styles.item_link}>\r\n                        <Link to={'characters'}>Characters</Link>\r\n                    </li>\r\n                    <li className={styles.item_link}>\r\n                        <Link to={'staff'}>Staff</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeInfoNav;\r\n","import { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getDatabase, push, ref, set } from 'firebase/database';\r\n\r\nimport { useAuth } from './useAuth';\r\n\r\nexport const useFirebaseAnimelist = (collection: string, data: any) => {\r\n    const db = getDatabase();\r\n    const navigate = useNavigate();\r\n    const { id } = useAuth();\r\n\r\n    const addAnimeToDatabase = useCallback(async () => {\r\n        try {\r\n            if (id && data) {\r\n                const collectionRef = ref(\r\n                    db,\r\n                    `users/${id}/${collection}/animelist`\r\n                );\r\n                const newAnimeRef = push(collectionRef);\r\n                await set(newAnimeRef, data);\r\n            } else {\r\n                navigate('/login');\r\n            }\r\n        } catch (error) {\r\n            console.error(\r\n                `Error interacting with Firebase during execute:`,\r\n                error\r\n            );\r\n        }\r\n    }, [db, id, data, navigate, collection]);\r\n\r\n    return addAnimeToDatabase;\r\n};\r\n","import { FC } from 'react';\r\nimport { Outlet, useParams } from 'react-router-dom';\r\n\r\nimport AnimeInfo from 'componets/animeInfo/AnimeInfo';\r\nimport Loading from 'componets/common/loading/Loading';\r\nimport AnimeInfoNav from 'componets/animeInfo/animeInfoNav/AnimeInfoNav';\r\nimport Error from 'componets/common/error/Error';\r\n\r\nimport { useGetAnimeByIdQuery } from 'services/AnimeService';\r\nimport { useFirebaseAnimelist } from 'hooks/useFirebaseAnimeList';\r\n\r\nconst AnimeInfoPage: FC = () => {\r\n    const { animeId } = useParams();\r\n\r\n    const { data, isLoading, isError } = useGetAnimeByIdQuery(animeId!);\r\n    const hasDataAndNoError = data && !isError;\r\n\r\n    const handleWatched = useFirebaseAnimelist('watched', data?.data);\r\n    const handleWatching = useFirebaseAnimelist('watching', data?.data);\r\n    const handleToWatch = useFirebaseAnimelist('towatch', data?.data);\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : hasDataAndNoError ? (\r\n                <>\r\n                    <AnimeInfo\r\n                        anime={data.data}\r\n                        handleWatched={handleWatched}\r\n                        handleWatching={handleWatching}\r\n                        handleToWatch={handleToWatch}\r\n                    />\r\n                    <AnimeInfoNav />\r\n                    <Outlet />\r\n                </>\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeInfoPage;\r\n"],"names":["Error","_jsx","className","styles","children","_ref","anime","handleWatching","handleToWatch","handleWatched","_jsxs","src","images","jpg","image_url","alt","title","score","onClick","AnimeInfoNav","Link","to","useFirebaseAnimelist","collection","data","db","getDatabase","navigate","useNavigate","id","useAuth","useCallback","async","collectionRef","ref","concat","newAnimeRef","push","set","error","console","AnimeInfoPage","animeId","useParams","isLoading","isError","useGetAnimeByIdQuery","hasDataAndNoError","Loading","_Fragment","AnimeInfo","Outlet"],"sourceRoot":""}