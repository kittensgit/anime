{"version":3,"file":"static/js/451.0b90b7fb.chunk.js","mappings":"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","sources":["webpack://anime/./src/componets/animeCards/animeCard/AnimeCard.module.css?f0d9","componets/animeCards/animeCard/AnimeCard.tsx","webpack://anime/./src/componets/animeCards/AnimeCards.module.css?a613","componets/animeCards/AnimeCards.tsx","webpack://anime/./src/componets/common/button/Button.module.css?1fef","componets/common/button/Button.tsx","webpack://anime/./src/componets/common/error/Error.module.css?2e01","componets/common/error/Error.tsx","data/index.ts","hooks/useCheckboxFilter.ts","webpack://anime/./src/componets/common/checkbox/Checkbox.module.css?6181","componets/common/checkbox/Checkbox.tsx","webpack://anime/./src/componets/catalogContent/catalogFilter/CatalogFilter.module.css?b383","componets/catalogContent/catalogFilter/CatalogFilter.tsx","webpack://anime/./src/componets/catalogContent/CatalogContent.module.css?3f69","componets/catalogContent/CatalogContent.tsx","pages/CatalogPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AnimeCard_card__MN31s\",\"front\":\"AnimeCard_front__BX9l2\",\"back\":\"AnimeCard_back__+XidZ\",\"img\":\"AnimeCard_img__36FKN\",\"title\":\"AnimeCard_title__NN5zZ\",\"caption\":\"AnimeCard_caption__DcLbc\",\"btn\":\"AnimeCard_btn__MSUHx\"};","import { FC } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n    IAnime,\r\n    IAnimeTitle,\r\n    IAnimeGenre,\r\n    IAnimeImage,\r\n} from 'types/anime/index';\r\n\r\nimport Button from '../../common/button/Button';\r\n\r\nimport styles from './AnimeCard.module.css';\r\n\r\ninterface AnimeCardProps {\r\n    title: IAnimeTitle['title'];\r\n    year: IAnime['year'];\r\n    genre: IAnimeGenre['name'];\r\n    img: IAnimeImage['image_url'];\r\n    id: IAnime['mal_id'];\r\n}\r\n\r\nconst AnimeCard: FC<AnimeCardProps> = ({ genre, title, year, img, id }) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <div className={styles.front}>\r\n                <img className={styles.img} src={img} alt={title} />\r\n                <h5 className={styles.title}>{title}</h5>\r\n                <p className={styles.caption}>\r\n                    {year ? year : '-'}, {genre}\r\n                </p>\r\n            </div>\r\n            <div className={styles.back}>\r\n                <h5 className={styles.title}>{title}</h5>\r\n                <p className={styles.caption}>\r\n                    {year ? year : '-'}, {genre}\r\n                </p>\r\n                <Button\r\n                    className={styles.btn}\r\n                    to={\r\n                        location.pathname.includes('/catalog')\r\n                            ? `${id}`\r\n                            : `/catalog/${id}`\r\n                    }\r\n                >\r\n                    Learn more\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cards\":\"AnimeCards_cards__udoxo\",\"title\":\"AnimeCards_title__u5YmA\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime/index';\r\n\r\nimport AnimeCard from './animeCard/AnimeCard';\r\n\r\nimport styles from './AnimeCards.module.css';\r\n\r\ninterface AnimeCardsProps {\r\n    title?: string;\r\n    animelist: IAnime[];\r\n}\r\n\r\nconst AnimeCards: FC<AnimeCardsProps> = ({ title, animelist }) => {\r\n    return (\r\n        <div>\r\n            {title && <h5 className={styles.title}>{title}</h5>}\r\n            <div className={styles.cards}>\r\n                {animelist.map((anime) => (\r\n                    <AnimeCard\r\n                        key={anime.mal_id}\r\n                        genre={anime.genres ? anime.genres[0]?.name : ''}\r\n                        year={anime.year}\r\n                        title={anime.title}\r\n                        img={anime.images.jpg.image_url}\r\n                        id={anime.mal_id}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimeCards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__53Zcg\"};","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './Button.module.css';\r\n\r\ninterface ButtonProps {\r\n    to: string;\r\n    children: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst Button: FC<ButtonProps> = ({ to, children, className }) => {\r\n    return (\r\n        <Link to={to}>\r\n            <button className={styles.btn + ' ' + className}>{children}</button>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__jtDW4\"};","import { FC } from 'react';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <h4 className={styles.error}>An error occurred while fetching data</h4>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","export const filter = ['Genres', 'Rating'];\r\nexport const seasonTypes = ['Winter', 'Spring', 'Summer', 'Fall'];\r\nexport const ratings = ['G', 'PG', 'PG13', 'R17', 'R', 'Rx'];\r\n\r\n// export const ratings = [\r\n//     'G - All Ages',\r\n//     'PG - Children',\r\n//     'PG-13 - Teens 13 or older',\r\n//     'R - 17+ (violence & profanity)',\r\n//     'R+ - Mild Nudity',\r\n//     'Rx - Hentai',\r\n// ];\r\n","import { useState } from 'react';\r\n\r\ntype ItemType = number | string;\r\n\r\nexport const useCheckboxFilter = (initialItems: ItemType[]) => {\r\n    const [selectedItems, setSelectedItems] =\r\n        useState<ItemType[]>(initialItems);\r\n\r\n    const handleChange = (item: ItemType) => {\r\n        setSelectedItems((prevItems) =>\r\n            prevItems.includes(item)\r\n                ? prevItems.filter((prevItem) => prevItem !== item)\r\n                : [...prevItems, item]\r\n        );\r\n    };\r\n\r\n    return [selectedItems, handleChange] as const;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"Checkbox_checkbox__O1jpS\"};","import { FC } from 'react';\r\n\r\nimport styles from './Checkbox.module.css';\r\n\r\ninterface CheckboxProps {\r\n    label: string;\r\n    onChange: () => void;\r\n    checked: boolean;\r\n}\r\n\r\nconst Checkbox: FC<CheckboxProps> = ({ label, onChange, checked }) => (\r\n    <li className={styles.checkbox}>\r\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\r\n        <label>{label}</label>\r\n    </li>\r\n);\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_list\":\"CatalogFilter_filter_list__ADpGF\",\"filter_item\":\"CatalogFilter_filter_item__270WA\",\"filter_title\":\"CatalogFilter_filter_title__W1ktW\",\"checkbox_list\":\"CatalogFilter_checkbox_list__Gb4a3\",\"button\":\"CatalogFilter_button__xSkU2\",\"view_all\":\"CatalogFilter_view_all__tiq3M\",\"caption\":\"CatalogFilter_caption__LkzPf\"};","import { FC, useState } from 'react';\r\n\r\nimport { filter, ratings } from 'data';\r\nimport { useCheckboxFilter } from 'hooks/useCheckboxFilter';\r\nimport { IGenre } from 'types/genres/genres';\r\n\r\nimport viewAllImg from 'assets/arrow-bottom.png';\r\n\r\nimport Checkbox from '../../common/checkbox/Checkbox';\r\n\r\nimport styles from './CatalogFilter.module.css';\r\n\r\ninterface CatalogFilterProps {\r\n    genres: IGenre[];\r\n    handleFilterClick: (genreId: string, rating: string) => void;\r\n}\r\n\r\nconst CatalogFilter: FC<CatalogFilterProps> = ({\r\n    genres,\r\n    handleFilterClick,\r\n}) => {\r\n    const [selectedGenres, handleGenreChange] = useCheckboxFilter([]);\r\n    const [selectedRatings, handleRatingChange] = useCheckboxFilter([]);\r\n    const [showAllGenres, setShowAllGenres] = useState(false);\r\n\r\n    const handleViewAllClick = () => {\r\n        setShowAllGenres(true);\r\n    };\r\n\r\n    const displayedGenres = showAllGenres ? genres : genres.slice(0, 5);\r\n\r\n    return (\r\n        <ul className={styles.filter_list}>\r\n            {filter.map((filterTitle, index) => (\r\n                <li key={index} className={styles.filter_item}>\r\n                    <h4 className={styles.filter_title}>{filterTitle}</h4>\r\n                    <ul className={styles.checkbox_list}>\r\n                        {index === 0 ? (\r\n                            <>\r\n                                {displayedGenres.map((genre) => (\r\n                                    <Checkbox\r\n                                        key={genre.mal_id}\r\n                                        label={genre.name}\r\n                                        onChange={() =>\r\n                                            handleGenreChange(genre.mal_id)\r\n                                        }\r\n                                        checked={selectedGenres.includes(\r\n                                            genre.mal_id\r\n                                        )}\r\n                                    />\r\n                                ))}\r\n\r\n                                {!showAllGenres && (\r\n                                    <div\r\n                                        className={styles.view_all}\r\n                                        onClick={handleViewAllClick}\r\n                                    >\r\n                                        <p className={styles.caption}>\r\n                                            View All\r\n                                        </p>\r\n                                        <img src={viewAllImg} alt=\"arrow\" />\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {ratings.map((rating, index) => (\r\n                                    <Checkbox\r\n                                        key={index}\r\n                                        label={rating}\r\n                                        onChange={() =>\r\n                                            handleRatingChange(rating)\r\n                                        }\r\n                                        checked={selectedRatings.includes(\r\n                                            rating\r\n                                        )}\r\n                                    />\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </ul>\r\n                </li>\r\n            ))}\r\n            <button\r\n                className={styles.button}\r\n                onClick={() =>\r\n                    handleFilterClick(\r\n                        selectedGenres.join(','),\r\n                        selectedRatings.join(',')\r\n                    )\r\n                }\r\n            >\r\n                Apply\r\n            </button>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default CatalogFilter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"catalog\":\"CatalogContent_catalog__AsXr0\",\"catalog_top\":\"CatalogContent_catalog_top__2pL3Z\",\"catalog_wrap\":\"CatalogContent_catalog_wrap__dAItT\",\"catalog_cards\":\"CatalogContent_catalog_cards__osgU4\",\"catalog_btn\":\"CatalogContent_catalog_btn__YM+fX\"};","import { FC } from 'react';\r\n\r\nimport { IAnime } from 'types/anime';\r\nimport { IGenre } from 'types/genres/genres';\r\n\r\nimport AnimeCards from '../animeCards/AnimeCards';\r\n\r\nimport CatalogFilter from './catalogFilter/CatalogFilter';\r\n\r\nimport styles from './CatalogContent.module.css';\r\n\r\ninterface CatalogContentProps {\r\n    animelist: IAnime[];\r\n    genres: IGenre[];\r\n    handleFilterClick: (genreId: string, rating: string) => void;\r\n    handleShowMoreClick: () => void;\r\n}\r\n\r\nconst CatalogContent: FC<CatalogContentProps> = ({\r\n    animelist,\r\n    genres,\r\n    handleFilterClick,\r\n    handleShowMoreClick,\r\n}) => {\r\n    return (\r\n        <div className={styles.catalog}>\r\n            <div className={styles.catalog_top}>\r\n                <h2>Catalog</h2>\r\n            </div>\r\n            <div className={styles.catalog_wrap}>\r\n                <CatalogFilter\r\n                    genres={genres}\r\n                    handleFilterClick={handleFilterClick}\r\n                />\r\n                <div className={styles.catalog_cards}>\r\n                    <AnimeCards animelist={animelist} />\r\n                    <button\r\n                        onClick={handleShowMoreClick}\r\n                        className={styles.catalog_btn}\r\n                    >\r\n                        Show more\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CatalogContent;\r\n","import { FC, useEffect, useState } from 'react';\r\n\r\nimport CatalogContent from 'componets/catalogContent/CatalogContent';\r\nimport Loading from 'componets/common/loading/Loading';\r\nimport Error from 'componets/common/error/Error';\r\n\r\nimport {\r\n    useGetAllAnimeQuery,\r\n    useGetAnimeGenresQuery,\r\n} from 'services/AnimeService';\r\n\r\nimport { IAnime } from 'types/anime';\r\n\r\nconst CatalogPage: FC = () => {\r\n    const [genresId, setGenresId] = useState<string>('0');\r\n    const [rating, setRating] = useState<string>('G');\r\n    const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n    const [allAnime, setAllAnime] = useState<IAnime[]>([]);\r\n\r\n    const animelistData = useGetAllAnimeQuery({\r\n        genres: genresId,\r\n        page: currentPage,\r\n        rating,\r\n    });\r\n\r\n    const genresData = useGetAnimeGenresQuery();\r\n\r\n    const hasDataAndNoError =\r\n        animelistData.data &&\r\n        genresData.data &&\r\n        !animelistData.isError &&\r\n        !genresData.isError;\r\n\r\n    const handleFilterClick = (genreId: string, rating: string) => {\r\n        setGenresId(genreId);\r\n        setCurrentPage(1);\r\n        setAllAnime([]);\r\n        setRating(rating ? rating : 'G');\r\n    };\r\n\r\n    const handleShowMoreClick = () => {\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (animelistData.data && animelistData.data.data) {\r\n            setAllAnime((prevAnime) => [\r\n                ...prevAnime,\r\n                ...animelistData.data!.data,\r\n            ]);\r\n        }\r\n    }, [animelistData.data]);\r\n\r\n    useEffect(() => {\r\n        animelistData.refetch();\r\n    }, [genresId, currentPage, rating]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {hasDataAndNoError ? (\r\n                <CatalogContent\r\n                    animelist={allAnime}\r\n                    genres={genresData.data.data}\r\n                    handleFilterClick={handleFilterClick}\r\n                    handleShowMoreClick={handleShowMoreClick}\r\n                />\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CatalogPage;\r\n"],"names":["_ref","genre","title","year","img","id","location","useLocation","_jsxs","className","styles","children","_jsx","src","alt","Button","to","pathname","includes","concat","animelist","map","anime","_anime$genres$","AnimeCard","genres","name","images","jpg","image_url","mal_id","Link","Error","filter","ratings","useCheckboxFilter","initialItems","selectedItems","setSelectedItems","useState","item","prevItems","prevItem","label","onChange","checked","type","handleFilterClick","selectedGenres","handleGenreChange","selectedRatings","handleRatingChange","showAllGenres","setShowAllGenres","handleViewAllClick","displayedGenres","slice","filterTitle","index","_Fragment","Checkbox","onClick","rating","join","handleShowMoreClick","CatalogFilter","AnimeCards","CatalogPage","genresId","setGenresId","setRating","currentPage","setCurrentPage","allAnime","setAllAnime","animelistData","useGetAllAnimeQuery","page","genresData","useGetAnimeGenresQuery","hasDataAndNoError","data","isError","useEffect","prevAnime","refetch","CatalogContent","genreId","prevPage"],"sourceRoot":""}