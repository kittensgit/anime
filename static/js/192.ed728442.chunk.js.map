{"version":3,"file":"static/js/192.ed728442.chunk.js","mappings":"8GACA,QAAwB,qB,aCGxB,MAMA,EANkBA,KAEVC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAC,yC,6DCLrC,QAAuB,wBAAvB,EAAuD,yBAAvD,EAAuF,wBAAvF,EAAqH,uBAArH,EAAmJ,wBAAnJ,EAAqL,2B,aCYrL,MA0BA,EA1BsCC,IAAoC,IAAnC,KAAEC,EAAI,UAAEC,EAAS,SAAEC,GAAUH,EAChE,OACII,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAYC,SAAA,EACxBK,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAaC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OACIC,UAAWC,EACXO,IAAKF,EAASG,UACdC,IAAKN,KAETL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SAAEE,KAC7BL,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeC,SAAEG,EAAU,SAE7CE,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAYC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SAAEE,KAC7BL,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeC,SACxBG,EACKA,EAAUM,KAAI,CAACC,EAAUC,KACrBN,EAAAA,EAAAA,MAAA,QAAAL,SAAA,CAAmBU,EAAS,MAAjBC,KAEf,UAGZ,EClCd,EAAwB,0BAAxB,EAA0D,0BC6B1D,EAlBwCV,IAAoB,IAAnB,UAAEW,GAAWX,EAClD,OACII,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAC,WAC7BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SACxBY,EAAUH,KAAKI,IACZhB,EAAAA,EAAAA,KAACiB,EAAS,CAENZ,KAAMW,EAAME,OAAOb,KACnBC,UAAWU,EAAMV,UACjBC,SAAUS,EAAME,OAAOC,OAAOC,KAHzBJ,EAAME,OAAOG,cAO5B,E,kCCjBd,MAoBA,EApBsBC,KAClB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OAEd,KAAEC,EAAI,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,IAAiBL,GAEhDM,EAAoBJ,IAASE,EAEnC,OACI3B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,SACrBuB,GACG1B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAO,IACRD,GACA7B,EAAAA,EAAAA,KAAC+B,EAAU,CAAChB,UAAWU,EAAKA,QAE5BzB,EAAAA,EAAAA,KAACD,EAAAA,EAAK,KAER,C","sources":["webpack://anime/./src/componets/common/error/Error.module.css?2e01","componets/common/error/Error.tsx","webpack://anime/./src/componets/staffCards/staffCard/StaffCard.module.css?6315","componets/staffCards/staffCard/StaffCard.tsx","webpack://anime/./src/componets/staffCards/StaffCards.module.css?547e","componets/staffCards/StaffCards.tsx","pages/StaffPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__jtDW4\"};","import { FC } from 'react';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <h4 className={styles.error}>An error occurred while fetching data</h4>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"StaffCard_card__aiQqt\",\"front\":\"StaffCard_front__5kF2S\",\"back\":\"StaffCard_back__b-Zzw\",\"img\":\"StaffCard_img__saQJU\",\"name\":\"StaffCard_name__UVVRn\",\"caption\":\"StaffCard_caption__V66KC\",\"btn\":\"StaffCard_btn__Utn5S\"};","import { FC } from 'react';\r\n\r\nimport { IPerson, IPersonImage } from 'types/characters';\r\nimport { IStaffData } from 'types/staff/staff';\r\n\r\nimport styles from './StaffCard.module.css';\r\n\r\ninterface StaffCardProps {\r\n    staffImg: IPersonImage['jpg'];\r\n    name: IPerson['name'];\r\n    positions: IStaffData['positions'];\r\n}\r\n\r\nconst StaffCard: FC<StaffCardProps> = ({ name, positions, staffImg }) => {\r\n    return (\r\n        <div className={styles.card}>\r\n            <div className={styles.front}>\r\n                <img\r\n                    className={styles.img}\r\n                    src={staffImg.image_url}\r\n                    alt={name}\r\n                />\r\n                <h5 className={styles.name}>{name}</h5>\r\n                <p className={styles.caption}>{positions[0]}</p>\r\n            </div>\r\n            <div className={styles.back}>\r\n                <h5 className={styles.name}>{name}</h5>\r\n                <p className={styles.caption}>\r\n                    {positions\r\n                        ? positions.map((position, index) => (\r\n                              <span key={index}>{position} </span>\r\n                          ))\r\n                        : ''}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaffCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"StaffCards_title__Ivbco\",\"cards\":\"StaffCards_cards__E-Bko\"};","import { FC } from 'react';\r\n\r\nimport { IStaffData } from 'types/staff/staff';\r\n\r\nimport StaffCard from './staffCard/StaffCard';\r\n\r\nimport styles from './StaffCards.module.css';\r\n\r\ninterface StaffCardsProps {\r\n    stafflist: IStaffData[];\r\n}\r\n\r\nconst StaffCards: FC<StaffCardsProps> = ({ stafflist }) => {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>Staff</h2>\r\n            <div className={styles.cards}>\r\n                {stafflist.map((staff) => (\r\n                    <StaffCard\r\n                        key={staff.person.mal_id}\r\n                        name={staff.person.name}\r\n                        positions={staff.positions}\r\n                        staffImg={staff.person.images.jpg}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaffCards;\r\n","import { FC } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport StaffCards from 'componets/staffCards/StaffCards';\r\nimport Loading from 'componets/common/loading/Loading';\r\nimport Error from 'componets/common/error/Error';\r\n\r\nimport { useGetStaffQuery } from 'services/AnimeService';\r\n\r\nconst StaffPage: FC = () => {\r\n    const { animeId } = useParams();\r\n\r\n    const { data, isLoading, isError } = useGetStaffQuery(animeId!);\r\n\r\n    const hasDataAndNoError = data && !isError;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : hasDataAndNoError ? (\r\n                <StaffCards stafflist={data.data} />\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaffPage;\r\n"],"names":["Error","_jsx","className","styles","children","_ref","name","positions","staffImg","_jsxs","src","image_url","alt","map","position","index","stafflist","staff","StaffCard","person","images","jpg","mal_id","StaffPage","animeId","useParams","data","isLoading","isError","useGetStaffQuery","hasDataAndNoError","Loading","StaffCards"],"sourceRoot":""}