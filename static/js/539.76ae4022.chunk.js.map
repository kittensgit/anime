{"version":3,"file":"static/js/539.76ae4022.chunk.js","mappings":"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","sources":["hooks/useAppDispatch.ts","hooks/useGetAnimeListFromFirebase.ts","webpack://anime/./src/componets/profileContent/ProfileNav/ProfileNav.module.css?98d1","componets/profileContent/ProfileNav/ProfileNav.tsx","webpack://anime/./src/componets/profileContent/ProfileContent.module.css?bd88","componets/profileContent/ProfileContent.tsx","pages/ProfilePage.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\nimport { AppDispatch } from 'types/redux/redux';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\n","import { useEffect, useState } from 'react';\r\nimport { ref, get, getDatabase } from 'firebase/database';\r\n\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { IAnime } from 'types/anime';\r\n\r\nconst useGetAnimeFromFirebase = (listType: string) => {\r\n    const { id } = useAuth();\r\n    const db = getDatabase();\r\n    const [animeList, setAnimeList] = useState<IAnime[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAnimeList = async () => {\r\n            try {\r\n                const listRef = ref(db, `users/${id}/${listType}/animelist`);\r\n                const listSnapshot = await get(listRef);\r\n\r\n                if (listSnapshot.exists()) {\r\n                    const listData = listSnapshot.val();\r\n                    const listArray: IAnime[] = Object.values(listData);\r\n                    setAnimeList(listArray);\r\n                } else {\r\n                    console.log(\r\n                        `Пользователь еще не просмотрел аниме в списке ${listType}`\r\n                    );\r\n                    setAnimeList([]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\r\n                    `Ошибка при получении данных о списке ${listType} аниме:`,\r\n                    error\r\n                );\r\n                setAnimeList([]);\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchAnimeList();\r\n        }\r\n    }, [id, listType, db]);\r\n\r\n    return animeList;\r\n};\r\n\r\nexport default useGetAnimeFromFirebase;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"ProfileNav_nav__uDSEQ\",\"navlist\":\"ProfileNav_navlist__pFCLt\",\"item_link\":\"ProfileNav_item_link__Lqaex\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport watchingImg from 'assets/eye.png';\r\nimport watchedImg from 'assets/check.png';\r\nimport towatchImg from 'assets/bookmark.png';\r\n\r\nimport styles from './ProfileNav.module.css';\r\n\r\ninterface ProfileNavProps {\r\n    countWatched: number;\r\n    countToWatch: number;\r\n    countWatching: number;\r\n}\r\n\r\nconst ProfileNav: FC<ProfileNavProps> = ({\r\n    countToWatch,\r\n    countWatched,\r\n    countWatching,\r\n}) => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <ul className={styles.navlist}>\r\n                <li className={styles.item_link}>\r\n                    <img src={watchedImg} alt=\"watched\" />\r\n                    <Link to={''}>Watched {countWatched}</Link>\r\n                </li>\r\n                <li className={styles.item_link}>\r\n                    <img src={watchingImg} alt=\"watching\" />\r\n                    <Link to={'watching'}>Watching {countWatching}</Link>\r\n                </li>\r\n                <li className={styles.item_link}>\r\n                    <img src={towatchImg} alt=\"to watch\" />\r\n                    <Link to={'to-watch'}>To Watch {countToWatch}</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default ProfileNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileContent_profile__ld3SC\",\"profile_info\":\"ProfileContent_profile_info__idTRj\",\"ava\":\"ProfileContent_ava__Hetw0\",\"btn\":\"ProfileContent_btn__9hwDf\",\"profile_category\":\"ProfileContent_profile_category__D1NJr\",\"category_item\":\"ProfileContent_category_item__41uo7\",\"category_title\":\"ProfileContent_category_title__O3VH8\",\"category_content\":\"ProfileContent_category_content__Yrr1I\",\"category_img\":\"ProfileContent_category_img__OcNYu\"};","import { FC } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport ProfileNav from './ProfileNav/ProfileNav';\r\n\r\nimport styles from './ProfileContent.module.css';\r\n\r\ninterface ProfileContentProps {\r\n    countWatched: number;\r\n    countToWatch: number;\r\n    countWatching: number;\r\n    username: string;\r\n    photo: string;\r\n    handleClick: () => void;\r\n}\r\n\r\nconst ProfileContent: FC<ProfileContentProps> = ({\r\n    countToWatch,\r\n    countWatched,\r\n    countWatching,\r\n    username,\r\n    photo,\r\n    handleClick,\r\n}) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.profile_info}>\r\n                <img className={styles.ava} src={photo} alt=\"img\" />\r\n                <div>\r\n                    <h2>{username}</h2>\r\n                    <button className={styles.btn} onClick={handleClick}>\r\n                        Log out\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.profile_content}>\r\n                <ProfileNav\r\n                    countToWatch={countToWatch}\r\n                    countWatched={countWatched}\r\n                    countWatching={countWatching}\r\n                />\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContent;\r\n","import { FC } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nimport ProfileContent from 'componets/profileContent/ProfileContent';\r\n\r\nimport useGetAnimeFromFirebase from 'hooks/useGetAnimeListFromFirebase';\r\nimport { useAppDispatch } from 'hooks/useAppDispatch';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nimport { removeUser } from '../redux/profileSlice';\r\n\r\nconst ProfilePage: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const countWatched = useGetAnimeFromFirebase('watched').length;\r\n    const countWatching = useGetAnimeFromFirebase('watching').length;\r\n    const countToWatch = useGetAnimeFromFirebase('towatch').length;\r\n\r\n    const { isAuth, username, photo } = useAuth();\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(removeUser());\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-wrap\">\r\n            <div className=\"container\">\r\n                {isAuth ? (\r\n                    <ProfileContent\r\n                        photo={photo}\r\n                        username={username}\r\n                        countToWatch={countToWatch}\r\n                        countWatched={countWatched}\r\n                        countWatching={countWatching}\r\n                        handleClick={handleLogOut}\r\n                    />\r\n                ) : (\r\n                    <Navigate replace to=\"/login\" />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["useAppDispatch","useDispatch","listType","id","useAuth","db","getDatabase","animeList","setAnimeList","useState","useEffect","async","listRef","ref","concat","listSnapshot","get","exists","listData","val","listArray","Object","values","console","log","error","fetchAnimeList","_ref","countToWatch","countWatched","countWatching","_jsx","className","styles","children","_jsxs","src","alt","Link","to","username","photo","handleClick","profile","profile_info","ava","btn","onClick","profile_content","ProfileNav","Outlet","ProfilePage","dispatch","useGetAnimeFromFirebase","length","isAuth","ProfileContent","handleLogOut","removeUser","Navigate","replace"],"sourceRoot":""}